import { d as documentFunction, _ as __vitePreload, s as sakura } from "../main.min.js";
import "../assets/_commonjsHelpers-ca272635.js";
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __decorateClass = (decorators, target, key, kind) => {
  var result = kind > 1 ? void 0 : kind ? __getOwnPropDesc(target, key) : target;
  for (var i = decorators.length - 1, decorator; i >= 0; i--)
    if (decorator = decorators[i])
      result = (kind ? decorator(target, key, result) : decorator(result)) || result;
  if (kind && result)
    __defProp(target, key, result);
  return result;
};
class Photos {
  registerJustifyLayout() {
  }
  registerMasonryLayout() {
    const masonryContainerElement = document.querySelector(".masonry-container");
    if (!masonryContainerElement) {
      return;
    }
    const galleryElement = masonryContainerElement.querySelector(".gallery");
    __vitePreload(() => import("../assets/isotope-6b8686d9.js").then((n) => n.i), true ? ["assets/isotope-6b8686d9.js","assets/_commonjsHelpers-ca272635.js"] : void 0).then((module) => {
      var _a;
      const galleryLayout = new module.default(galleryElement, {
        layoutMode: "masonry",
        masonry: {
          gutter: 10
        },
        itemSelector: ".gallery-item"
      });
      galleryElement == null ? void 0 : galleryElement.querySelectorAll("img.lazyload").forEach((img) => {
        img.addEventListener("load", () => {
          galleryLayout.layout();
        });
      });
      galleryLayout.once("layoutComplete", function() {
        var _a2;
        (_a2 = masonryContainerElement.querySelector(".photos-content")) == null ? void 0 : _a2.classList.remove("loading");
      });
      const galleryFilterbarElement = masonryContainerElement == null ? void 0 : masonryContainerElement.querySelector("#gallery-filter");
      const galleryFilterbarItemsElement = galleryFilterbarElement == null ? void 0 : galleryFilterbarElement.querySelectorAll("li span");
      const defaultGroup = (_a = sakura.getThemeConfig("photos", "default_group", String)) == null ? void 0 : _a.valueOf();
      galleryFilterbarItemsElement == null ? void 0 : galleryFilterbarItemsElement.forEach((hrefElement) => {
        const filter = hrefElement.getAttribute("data-filter");
        if (defaultGroup) {
          if (filter == `.${defaultGroup}`) {
            galleryFilterbarItemsElement[0].classList.remove("active");
            hrefElement.classList.add("active");
            galleryLayout.arrange({
              filter
            });
          }
        }
        hrefElement.addEventListener("click", (event) => {
          event.preventDefault();
          if (hrefElement.classList.contains("active")) {
            return;
          }
          galleryFilterbarItemsElement == null ? void 0 : galleryFilterbarItemsElement.forEach((item) => {
            item.classList.remove("active");
          });
          hrefElement.classList.add("active");
          galleryLayout.arrange({
            filter
          });
        });
      });
      const gridChangeElements = masonryContainerElement == null ? void 0 : masonryContainerElement.querySelectorAll("#grid-changer span");
      gridChangeElements == null ? void 0 : gridChangeElements.forEach((gridChangeElement) => {
        gridChangeElement == null ? void 0 : gridChangeElement.addEventListener("click", () => {
          gridChangeElements.forEach((item) => {
            item.classList.remove("active");
          });
          gridChangeElement.classList.add("active");
          galleryElement == null ? void 0 : galleryElement.querySelectorAll("[class*='col-']").forEach((item) => {
            for (let i = 0; i < item.classList.length; i++) {
              const className = item.classList[i];
              if (className.startsWith("col-")) {
                item.classList.remove(className);
                i--;
              }
            }
          });
          galleryElement == null ? void 0 : galleryElement.querySelectorAll(".gallery-item").forEach((item) => {
            item.classList.add("col-" + gridChangeElement.getAttribute("data-col") || "");
          });
          galleryLayout.layout();
        });
      });
    });
  }
}
__decorateClass([
  documentFunction(false)
], Photos.prototype, "registerJustifyLayout", 1);
__decorateClass([
  documentFunction()
], Photos.prototype, "registerMasonryLayout", 1);
